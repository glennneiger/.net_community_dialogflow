// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/dialogflow/v2/session.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Dialogflow.V2 {

  /// <summary>Holder for reflection information generated from google/cloud/dialogflow/v2/session.proto</summary>
  public static partial class SessionReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/dialogflow/v2/session.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SessionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cihnb29nbGUvY2xvdWQvZGlhbG9nZmxvdy92Mi9zZXNzaW9uLnByb3RvEhpn",
            "b29nbGUuY2xvdWQuZGlhbG9nZmxvdy52MhocZ29vZ2xlL2FwaS9hbm5vdGF0",
            "aW9ucy5wcm90bxooZ29vZ2xlL2Nsb3VkL2RpYWxvZ2Zsb3cvdjIvY29udGV4",
            "dC5wcm90bxonZ29vZ2xlL2Nsb3VkL2RpYWxvZ2Zsb3cvdjIvaW50ZW50LnBy",
            "b3RvGjRnb29nbGUvY2xvdWQvZGlhbG9nZmxvdy92Mi9zZXNzaW9uX2VudGl0",
            "eV90eXBlLnByb3RvGhxnb29nbGUvcHJvdG9idWYvc3RydWN0LnByb3RvGhdn",
            "b29nbGUvcnBjL3N0YXR1cy5wcm90bxoYZ29vZ2xlL3R5cGUvbGF0bG5nLnBy",
            "b3RvIrsBChNEZXRlY3RJbnRlbnRSZXF1ZXN0Eg8KB3Nlc3Npb24YASABKAkS",
            "QQoMcXVlcnlfcGFyYW1zGAIgASgLMisuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zs",
            "b3cudjIuUXVlcnlQYXJhbWV0ZXJzEjsKC3F1ZXJ5X2lucHV0GAMgASgLMiYu",
            "Z29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cudjIuUXVlcnlJbnB1dBITCgtpbnB1",
            "dF9hdWRpbxgFIAEoDCKWAQoURGV0ZWN0SW50ZW50UmVzcG9uc2USEwoLcmVz",
            "cG9uc2VfaWQYASABKAkSPQoMcXVlcnlfcmVzdWx0GAIgASgLMicuZ29vZ2xl",
            "LmNsb3VkLmRpYWxvZ2Zsb3cudjIuUXVlcnlSZXN1bHQSKgoOd2ViaG9va19z",
            "dGF0dXMYAyABKAsyEi5nb29nbGUucnBjLlN0YXR1cyKVAgoPUXVlcnlQYXJh",
            "bWV0ZXJzEhEKCXRpbWVfem9uZRgBIAEoCRIpCgxnZW9fbG9jYXRpb24YAiAB",
            "KAsyEy5nb29nbGUudHlwZS5MYXRMbmcSNQoIY29udGV4dHMYAyADKAsyIy5n",
            "b29nbGUuY2xvdWQuZGlhbG9nZmxvdy52Mi5Db250ZXh0EhYKDnJlc2V0X2Nv",
            "bnRleHRzGAQgASgIEksKFHNlc3Npb25fZW50aXR5X3R5cGVzGAUgAygLMi0u",
            "Z29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cudjIuU2Vzc2lvbkVudGl0eVR5cGUS",
            "KAoHcGF5bG9hZBgGIAEoCzIXLmdvb2dsZS5wcm90b2J1Zi5TdHJ1Y3QiywEK",
            "ClF1ZXJ5SW5wdXQSRAoMYXVkaW9fY29uZmlnGAEgASgLMiwuZ29vZ2xlLmNs",
            "b3VkLmRpYWxvZ2Zsb3cudjIuSW5wdXRBdWRpb0NvbmZpZ0gAEjUKBHRleHQY",
            "AiABKAsyJS5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy52Mi5UZXh0SW5wdXRI",
            "ABI3CgVldmVudBgDIAEoCzImLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LnYy",
            "LkV2ZW50SW5wdXRIAEIHCgVpbnB1dCK4BAoLUXVlcnlSZXN1bHQSEgoKcXVl",
            "cnlfdGV4dBgBIAEoCRIVCg1sYW5ndWFnZV9jb2RlGA8gASgJEiUKHXNwZWVj",
            "aF9yZWNvZ25pdGlvbl9jb25maWRlbmNlGAIgASgCEg4KBmFjdGlvbhgDIAEo",
            "CRIrCgpwYXJhbWV0ZXJzGAQgASgLMhcuZ29vZ2xlLnByb3RvYnVmLlN0cnVj",
            "dBIjChthbGxfcmVxdWlyZWRfcGFyYW1zX3ByZXNlbnQYBSABKAgSGAoQZnVs",
            "ZmlsbG1lbnRfdGV4dBgGIAEoCRJIChRmdWxmaWxsbWVudF9tZXNzYWdlcxgH",
            "IAMoCzIqLmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LnYyLkludGVudC5NZXNz",
            "YWdlEhYKDndlYmhvb2tfc291cmNlGAggASgJEjAKD3dlYmhvb2tfcGF5bG9h",
            "ZBgJIAEoCzIXLmdvb2dsZS5wcm90b2J1Zi5TdHJ1Y3QSPAoPb3V0cHV0X2Nv",
            "bnRleHRzGAogAygLMiMuZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cudjIuQ29u",
            "dGV4dBIyCgZpbnRlbnQYCyABKAsyIi5nb29nbGUuY2xvdWQuZGlhbG9nZmxv",
            "dy52Mi5JbnRlbnQSIwobaW50ZW50X2RldGVjdGlvbl9jb25maWRlbmNlGAwg",
            "ASgCEjAKD2RpYWdub3N0aWNfaW5mbxgOIAEoCzIXLmdvb2dsZS5wcm90b2J1",
            "Zi5TdHJ1Y3Qi3gEKHFN0cmVhbWluZ0RldGVjdEludGVudFJlcXVlc3QSDwoH",
            "c2Vzc2lvbhgBIAEoCRJBCgxxdWVyeV9wYXJhbXMYAiABKAsyKy5nb29nbGUu",
            "Y2xvdWQuZGlhbG9nZmxvdy52Mi5RdWVyeVBhcmFtZXRlcnMSOwoLcXVlcnlf",
            "aW5wdXQYAyABKAsyJi5nb29nbGUuY2xvdWQuZGlhbG9nZmxvdy52Mi5RdWVy",
            "eUlucHV0EhgKEHNpbmdsZV91dHRlcmFuY2UYBCABKAgSEwoLaW5wdXRfYXVk",
            "aW8YBiABKAwi8wEKHVN0cmVhbWluZ0RldGVjdEludGVudFJlc3BvbnNlEhMK",
            "C3Jlc3BvbnNlX2lkGAEgASgJElIKEnJlY29nbml0aW9uX3Jlc3VsdBgCIAEo",
            "CzI2Lmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LnYyLlN0cmVhbWluZ1JlY29n",
            "bml0aW9uUmVzdWx0Ej0KDHF1ZXJ5X3Jlc3VsdBgDIAEoCzInLmdvb2dsZS5j",
            "bG91ZC5kaWFsb2dmbG93LnYyLlF1ZXJ5UmVzdWx0EioKDndlYmhvb2tfc3Rh",
            "dHVzGAQgASgLMhIuZ29vZ2xlLnJwYy5TdGF0dXMiigIKGlN0cmVhbWluZ1Jl",
            "Y29nbml0aW9uUmVzdWx0ElgKDG1lc3NhZ2VfdHlwZRgBIAEoDjJCLmdvb2ds",
            "ZS5jbG91ZC5kaWFsb2dmbG93LnYyLlN0cmVhbWluZ1JlY29nbml0aW9uUmVz",
            "dWx0Lk1lc3NhZ2VUeXBlEhIKCnRyYW5zY3JpcHQYAiABKAkSEAoIaXNfZmlu",
            "YWwYAyABKAgSEgoKY29uZmlkZW5jZRgEIAEoAiJYCgtNZXNzYWdlVHlwZRIc",
            "ChhNRVNTQUdFX1RZUEVfVU5TUEVDSUZJRUQQABIOCgpUUkFOU0NSSVBUEAES",
            "GwoXRU5EX09GX1NJTkdMRV9VVFRFUkFOQ0UQAiKdAQoQSW5wdXRBdWRpb0Nv",
            "bmZpZxJBCg5hdWRpb19lbmNvZGluZxgBIAEoDjIpLmdvb2dsZS5jbG91ZC5k",
            "aWFsb2dmbG93LnYyLkF1ZGlvRW5jb2RpbmcSGQoRc2FtcGxlX3JhdGVfaGVy",
            "dHoYAiABKAUSFQoNbGFuZ3VhZ2VfY29kZRgDIAEoCRIUCgxwaHJhc2VfaGlu",
            "dHMYBCADKAkiMAoJVGV4dElucHV0EgwKBHRleHQYASABKAkSFQoNbGFuZ3Vh",
            "Z2VfY29kZRgCIAEoCSJeCgpFdmVudElucHV0EgwKBG5hbWUYASABKAkSKwoK",
            "cGFyYW1ldGVycxgCIAEoCzIXLmdvb2dsZS5wcm90b2J1Zi5TdHJ1Y3QSFQoN",
            "bGFuZ3VhZ2VfY29kZRgDIAEoCSr7AQoNQXVkaW9FbmNvZGluZxIeChpBVURJ",
            "T19FTkNPRElOR19VTlNQRUNJRklFRBAAEhwKGEFVRElPX0VOQ09ESU5HX0xJ",
            "TkVBUl8xNhABEhcKE0FVRElPX0VOQ09ESU5HX0ZMQUMQAhIYChRBVURJT19F",
            "TkNPRElOR19NVUxBVxADEhYKEkFVRElPX0VOQ09ESU5HX0FNUhAEEhkKFUFV",
            "RElPX0VOQ09ESU5HX0FNUl9XQhAFEhsKF0FVRElPX0VOQ09ESU5HX09HR19P",
            "UFVTEAYSKQolQVVESU9fRU5DT0RJTkdfU1BFRVhfV0lUSF9IRUFERVJfQllU",
            "RRAHMtQCCghTZXNzaW9ucxK0AQoMRGV0ZWN0SW50ZW50Ei8uZ29vZ2xlLmNs",
            "b3VkLmRpYWxvZ2Zsb3cudjIuRGV0ZWN0SW50ZW50UmVxdWVzdBowLmdvb2ds",
            "ZS5jbG91ZC5kaWFsb2dmbG93LnYyLkRldGVjdEludGVudFJlc3BvbnNlIkGC",
            "0+STAjsiNi92Mi97c2Vzc2lvbj1wcm9qZWN0cy8qL2FnZW50L3Nlc3Npb25z",
            "Lyp9OmRldGVjdEludGVudDoBKhKQAQoVU3RyZWFtaW5nRGV0ZWN0SW50ZW50",
            "EjguZ29vZ2xlLmNsb3VkLmRpYWxvZ2Zsb3cudjIuU3RyZWFtaW5nRGV0ZWN0",
            "SW50ZW50UmVxdWVzdBo5Lmdvb2dsZS5jbG91ZC5kaWFsb2dmbG93LnYyLlN0",
            "cmVhbWluZ0RldGVjdEludGVudFJlc3BvbnNlKAEwAUKbAQoeY29tLmdvb2ds",
            "ZS5jbG91ZC5kaWFsb2dmbG93LnYyQgxTZXNzaW9uUHJvdG9QAVpEZ29vZ2xl",
            "LmdvbGFuZy5vcmcvZ2VucHJvdG8vZ29vZ2xlYXBpcy9jbG91ZC9kaWFsb2dm",
            "bG93L3YyO2RpYWxvZ2Zsb3f4AQGiAgJERqoCGkdvb2dsZS5DbG91ZC5EaWFs",
            "b2dmbG93LlYyYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Cloud.Dialogflow.V2.ContextReflection.Descriptor, global::Google.Cloud.Dialogflow.V2.IntentReflection.Descriptor, global::Google.Cloud.Dialogflow.V2.SessionEntityTypeReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.StructReflection.Descriptor, global::Google.Rpc.StatusReflection.Descriptor, global::Google.Type.LatlngReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Google.Cloud.Dialogflow.V2.AudioEncoding), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dialogflow.V2.DetectIntentRequest), global::Google.Cloud.Dialogflow.V2.DetectIntentRequest.Parser, new[]{ "Session", "QueryParams", "QueryInput", "InputAudio" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dialogflow.V2.DetectIntentResponse), global::Google.Cloud.Dialogflow.V2.DetectIntentResponse.Parser, new[]{ "ResponseId", "QueryResult", "WebhookStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dialogflow.V2.QueryParameters), global::Google.Cloud.Dialogflow.V2.QueryParameters.Parser, new[]{ "TimeZone", "GeoLocation", "Contexts", "ResetContexts", "SessionEntityTypes", "Payload" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dialogflow.V2.QueryInput), global::Google.Cloud.Dialogflow.V2.QueryInput.Parser, new[]{ "AudioConfig", "Text", "Event" }, new[]{ "Input" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dialogflow.V2.QueryResult), global::Google.Cloud.Dialogflow.V2.QueryResult.Parser, new[]{ "QueryText", "LanguageCode", "SpeechRecognitionConfidence", "Action", "Parameters", "AllRequiredParamsPresent", "FulfillmentText", "FulfillmentMessages", "WebhookSource", "WebhookPayload", "OutputContexts", "Intent", "IntentDetectionConfidence", "DiagnosticInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dialogflow.V2.StreamingDetectIntentRequest), global::Google.Cloud.Dialogflow.V2.StreamingDetectIntentRequest.Parser, new[]{ "Session", "QueryParams", "QueryInput", "SingleUtterance", "InputAudio" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dialogflow.V2.StreamingDetectIntentResponse), global::Google.Cloud.Dialogflow.V2.StreamingDetectIntentResponse.Parser, new[]{ "ResponseId", "RecognitionResult", "QueryResult", "WebhookStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dialogflow.V2.StreamingRecognitionResult), global::Google.Cloud.Dialogflow.V2.StreamingRecognitionResult.Parser, new[]{ "MessageType", "Transcript", "IsFinal", "Confidence" }, null, new[]{ typeof(global::Google.Cloud.Dialogflow.V2.StreamingRecognitionResult.Types.MessageType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dialogflow.V2.InputAudioConfig), global::Google.Cloud.Dialogflow.V2.InputAudioConfig.Parser, new[]{ "AudioEncoding", "SampleRateHertz", "LanguageCode", "PhraseHints" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dialogflow.V2.TextInput), global::Google.Cloud.Dialogflow.V2.TextInput.Parser, new[]{ "Text", "LanguageCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dialogflow.V2.EventInput), global::Google.Cloud.Dialogflow.V2.EventInput.Parser, new[]{ "Name", "Parameters", "LanguageCode" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Audio encoding of the audio content sent in the conversational query request.
  /// Refer to the [Cloud Speech API documentation](/speech/docs/basics) for more
  /// details.
  /// </summary>
  public enum AudioEncoding {
    /// <summary>
    /// Not specified.
    /// </summary>
    [pbr::OriginalName("AUDIO_ENCODING_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Uncompressed 16-bit signed little-endian samples (Linear PCM).
    /// </summary>
    [pbr::OriginalName("AUDIO_ENCODING_LINEAR_16")] Linear16 = 1,
    /// <summary>
    /// [`FLAC`](https://xiph.org/flac/documentation.html) (Free Lossless Audio
    /// Codec) is the recommended encoding because it is lossless (therefore
    /// recognition is not compromised) and requires only about half the
    /// bandwidth of `LINEAR16`. `FLAC` stream encoding supports 16-bit and
    /// 24-bit samples, however, not all fields in `STREAMINFO` are supported.
    /// </summary>
    [pbr::OriginalName("AUDIO_ENCODING_FLAC")] Flac = 2,
    /// <summary>
    /// 8-bit samples that compand 14-bit audio samples using G.711 PCMU/mu-law.
    /// </summary>
    [pbr::OriginalName("AUDIO_ENCODING_MULAW")] Mulaw = 3,
    /// <summary>
    /// Adaptive Multi-Rate Narrowband codec. `sample_rate_hertz` must be 8000.
    /// </summary>
    [pbr::OriginalName("AUDIO_ENCODING_AMR")] Amr = 4,
    /// <summary>
    /// Adaptive Multi-Rate Wideband codec. `sample_rate_hertz` must be 16000.
    /// </summary>
    [pbr::OriginalName("AUDIO_ENCODING_AMR_WB")] AmrWb = 5,
    /// <summary>
    /// Opus encoded audio frames in Ogg container
    /// ([OggOpus](https://wiki.xiph.org/OggOpus)).
    /// `sample_rate_hertz` must be 16000.
    /// </summary>
    [pbr::OriginalName("AUDIO_ENCODING_OGG_OPUS")] OggOpus = 6,
    /// <summary>
    /// Although the use of lossy encodings is not recommended, if a very low
    /// bitrate encoding is required, `OGG_OPUS` is highly preferred over
    /// Speex encoding. The [Speex](https://speex.org/) encoding supported by
    /// Dialogflow API has a header byte in each block, as in MIME type
    /// `audio/x-speex-with-header-byte`.
    /// It is a variant of the RTP Speex encoding defined in
    /// [RFC 5574](https://tools.ietf.org/html/rfc5574).
    /// The stream is a sequence of blocks, one block per RTP packet. Each block
    /// starts with a byte containing the length of the block, in bytes, followed
    /// by one or more frames of Speex data, padded to an integral number of
    /// bytes (octets) as specified in RFC 5574. In other words, each RTP header
    /// is replaced with a single byte containing the block length. Only Speex
    /// wideband is supported. `sample_rate_hertz` must be 16000.
    /// </summary>
    [pbr::OriginalName("AUDIO_ENCODING_SPEEX_WITH_HEADER_BYTE")] SpeexWithHeaderByte = 7,
  }

  #endregion

  #region Messages
  /// <summary>
  /// The request to detect user's intent.
  /// </summary>
  public sealed partial class DetectIntentRequest : pb::IMessage<DetectIntentRequest> {
    private static readonly pb::MessageParser<DetectIntentRequest> _parser = new pb::MessageParser<DetectIntentRequest>(() => new DetectIntentRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DetectIntentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dialogflow.V2.SessionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetectIntentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetectIntentRequest(DetectIntentRequest other) : this() {
      session_ = other.session_;
      QueryParams = other.queryParams_ != null ? other.QueryParams.Clone() : null;
      QueryInput = other.queryInput_ != null ? other.QueryInput.Clone() : null;
      inputAudio_ = other.inputAudio_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetectIntentRequest Clone() {
      return new DetectIntentRequest(this);
    }

    /// <summary>Field number for the "session" field.</summary>
    public const int SessionFieldNumber = 1;
    private string session_ = "";
    /// <summary>
    /// Required. The name of the session this query is sent to. Format:
    /// `projects/&lt;Project ID>/agent/sessions/&lt;Session ID>`. It's up to the API
    /// caller to choose an appropriate session ID. It can be a random number or
    /// some type of user identifier (preferably hashed). The length of the session
    /// ID must not exceed 36 bytes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Session {
      get { return session_; }
      set {
        session_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "query_params" field.</summary>
    public const int QueryParamsFieldNumber = 2;
    private global::Google.Cloud.Dialogflow.V2.QueryParameters queryParams_;
    /// <summary>
    /// Optional. The parameters of this query.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dialogflow.V2.QueryParameters QueryParams {
      get { return queryParams_; }
      set {
        queryParams_ = value;
      }
    }

    /// <summary>Field number for the "query_input" field.</summary>
    public const int QueryInputFieldNumber = 3;
    private global::Google.Cloud.Dialogflow.V2.QueryInput queryInput_;
    /// <summary>
    /// Required. The input specification. It can be set to:
    ///
    /// 1.  an audio config
    ///     which instructs the speech recognizer how to process the speech audio,
    ///
    /// 2.  a conversational query in the form of text, or
    ///
    /// 3.  an event that specifies which intent to trigger.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dialogflow.V2.QueryInput QueryInput {
      get { return queryInput_; }
      set {
        queryInput_ = value;
      }
    }

    /// <summary>Field number for the "input_audio" field.</summary>
    public const int InputAudioFieldNumber = 5;
    private pb::ByteString inputAudio_ = pb::ByteString.Empty;
    /// <summary>
    /// Optional. The natural language speech audio to be processed. This field
    /// should be populated iff `query_input` is set to an input audio config.
    /// A single request can contain up to 1 minute of speech audio data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString InputAudio {
      get { return inputAudio_; }
      set {
        inputAudio_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DetectIntentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DetectIntentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Session != other.Session) return false;
      if (!object.Equals(QueryParams, other.QueryParams)) return false;
      if (!object.Equals(QueryInput, other.QueryInput)) return false;
      if (InputAudio != other.InputAudio) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Session.Length != 0) hash ^= Session.GetHashCode();
      if (queryParams_ != null) hash ^= QueryParams.GetHashCode();
      if (queryInput_ != null) hash ^= QueryInput.GetHashCode();
      if (InputAudio.Length != 0) hash ^= InputAudio.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Session.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Session);
      }
      if (queryParams_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(QueryParams);
      }
      if (queryInput_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(QueryInput);
      }
      if (InputAudio.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(InputAudio);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Session.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Session);
      }
      if (queryParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(QueryParams);
      }
      if (queryInput_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(QueryInput);
      }
      if (InputAudio.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(InputAudio);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DetectIntentRequest other) {
      if (other == null) {
        return;
      }
      if (other.Session.Length != 0) {
        Session = other.Session;
      }
      if (other.queryParams_ != null) {
        if (queryParams_ == null) {
          queryParams_ = new global::Google.Cloud.Dialogflow.V2.QueryParameters();
        }
        QueryParams.MergeFrom(other.QueryParams);
      }
      if (other.queryInput_ != null) {
        if (queryInput_ == null) {
          queryInput_ = new global::Google.Cloud.Dialogflow.V2.QueryInput();
        }
        QueryInput.MergeFrom(other.QueryInput);
      }
      if (other.InputAudio.Length != 0) {
        InputAudio = other.InputAudio;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Session = input.ReadString();
            break;
          }
          case 18: {
            if (queryParams_ == null) {
              queryParams_ = new global::Google.Cloud.Dialogflow.V2.QueryParameters();
            }
            input.ReadMessage(queryParams_);
            break;
          }
          case 26: {
            if (queryInput_ == null) {
              queryInput_ = new global::Google.Cloud.Dialogflow.V2.QueryInput();
            }
            input.ReadMessage(queryInput_);
            break;
          }
          case 42: {
            InputAudio = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The message returned from the DetectIntent method.
  /// </summary>
  public sealed partial class DetectIntentResponse : pb::IMessage<DetectIntentResponse> {
    private static readonly pb::MessageParser<DetectIntentResponse> _parser = new pb::MessageParser<DetectIntentResponse>(() => new DetectIntentResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DetectIntentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dialogflow.V2.SessionReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetectIntentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetectIntentResponse(DetectIntentResponse other) : this() {
      responseId_ = other.responseId_;
      QueryResult = other.queryResult_ != null ? other.QueryResult.Clone() : null;
      WebhookStatus = other.webhookStatus_ != null ? other.WebhookStatus.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetectIntentResponse Clone() {
      return new DetectIntentResponse(this);
    }

    /// <summary>Field number for the "response_id" field.</summary>
    public const int ResponseIdFieldNumber = 1;
    private string responseId_ = "";
    /// <summary>
    /// The unique identifier of the response. It can be used to
    /// locate a response in the training example set or for reporting issues.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResponseId {
      get { return responseId_; }
      set {
        responseId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "query_result" field.</summary>
    public const int QueryResultFieldNumber = 2;
    private global::Google.Cloud.Dialogflow.V2.QueryResult queryResult_;
    /// <summary>
    /// The results of the conversational query or event processing.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dialogflow.V2.QueryResult QueryResult {
      get { return queryResult_; }
      set {
        queryResult_ = value;
      }
    }

    /// <summary>Field number for the "webhook_status" field.</summary>
    public const int WebhookStatusFieldNumber = 3;
    private global::Google.Rpc.Status webhookStatus_;
    /// <summary>
    /// Specifies the status of the webhook request. `webhook_status`
    /// is never populated in webhook requests.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Rpc.Status WebhookStatus {
      get { return webhookStatus_; }
      set {
        webhookStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DetectIntentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DetectIntentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResponseId != other.ResponseId) return false;
      if (!object.Equals(QueryResult, other.QueryResult)) return false;
      if (!object.Equals(WebhookStatus, other.WebhookStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResponseId.Length != 0) hash ^= ResponseId.GetHashCode();
      if (queryResult_ != null) hash ^= QueryResult.GetHashCode();
      if (webhookStatus_ != null) hash ^= WebhookStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResponseId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResponseId);
      }
      if (queryResult_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(QueryResult);
      }
      if (webhookStatus_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(WebhookStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResponseId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResponseId);
      }
      if (queryResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(QueryResult);
      }
      if (webhookStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WebhookStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DetectIntentResponse other) {
      if (other == null) {
        return;
      }
      if (other.ResponseId.Length != 0) {
        ResponseId = other.ResponseId;
      }
      if (other.queryResult_ != null) {
        if (queryResult_ == null) {
          queryResult_ = new global::Google.Cloud.Dialogflow.V2.QueryResult();
        }
        QueryResult.MergeFrom(other.QueryResult);
      }
      if (other.webhookStatus_ != null) {
        if (webhookStatus_ == null) {
          webhookStatus_ = new global::Google.Rpc.Status();
        }
        WebhookStatus.MergeFrom(other.WebhookStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ResponseId = input.ReadString();
            break;
          }
          case 18: {
            if (queryResult_ == null) {
              queryResult_ = new global::Google.Cloud.Dialogflow.V2.QueryResult();
            }
            input.ReadMessage(queryResult_);
            break;
          }
          case 26: {
            if (webhookStatus_ == null) {
              webhookStatus_ = new global::Google.Rpc.Status();
            }
            input.ReadMessage(webhookStatus_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Represents the parameters of the conversational query.
  /// </summary>
  public sealed partial class QueryParameters : pb::IMessage<QueryParameters> {
    private static readonly pb::MessageParser<QueryParameters> _parser = new pb::MessageParser<QueryParameters>(() => new QueryParameters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryParameters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dialogflow.V2.SessionReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryParameters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryParameters(QueryParameters other) : this() {
      timeZone_ = other.timeZone_;
      GeoLocation = other.geoLocation_ != null ? other.GeoLocation.Clone() : null;
      contexts_ = other.contexts_.Clone();
      resetContexts_ = other.resetContexts_;
      sessionEntityTypes_ = other.sessionEntityTypes_.Clone();
      Payload = other.payload_ != null ? other.Payload.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryParameters Clone() {
      return new QueryParameters(this);
    }

    /// <summary>Field number for the "time_zone" field.</summary>
    public const int TimeZoneFieldNumber = 1;
    private string timeZone_ = "";
    /// <summary>
    /// Optional. The time zone of this conversational query from the
    /// [time zone database](https://www.iana.org/time-zones), e.g.,
    /// America/New_York, Europe/Paris. If not provided, the time zone specified in
    /// agent settings is used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TimeZone {
      get { return timeZone_; }
      set {
        timeZone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "geo_location" field.</summary>
    public const int GeoLocationFieldNumber = 2;
    private global::Google.Type.LatLng geoLocation_;
    /// <summary>
    /// Optional. The geo location of this conversational query.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.LatLng GeoLocation {
      get { return geoLocation_; }
      set {
        geoLocation_ = value;
      }
    }

    /// <summary>Field number for the "contexts" field.</summary>
    public const int ContextsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dialogflow.V2.Context> _repeated_contexts_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Cloud.Dialogflow.V2.Context.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dialogflow.V2.Context> contexts_ = new pbc::RepeatedField<global::Google.Cloud.Dialogflow.V2.Context>();
    /// <summary>
    /// Optional. The collection of contexts to be activated before this query is
    /// executed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dialogflow.V2.Context> Contexts {
      get { return contexts_; }
    }

    /// <summary>Field number for the "reset_contexts" field.</summary>
    public const int ResetContextsFieldNumber = 4;
    private bool resetContexts_;
    /// <summary>
    /// Optional. Specifies whether to delete all contexts in the current session
    /// before the new ones are activated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ResetContexts {
      get { return resetContexts_; }
      set {
        resetContexts_ = value;
      }
    }

    /// <summary>Field number for the "session_entity_types" field.</summary>
    public const int SessionEntityTypesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dialogflow.V2.SessionEntityType> _repeated_sessionEntityTypes_codec
        = pb::FieldCodec.ForMessage(42, global::Google.Cloud.Dialogflow.V2.SessionEntityType.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dialogflow.V2.SessionEntityType> sessionEntityTypes_ = new pbc::RepeatedField<global::Google.Cloud.Dialogflow.V2.SessionEntityType>();
    /// <summary>
    /// Optional. The collection of session entity types to replace or extend
    /// developer entities with for this query only. The entity synonyms apply
    /// to all languages.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dialogflow.V2.SessionEntityType> SessionEntityTypes {
      get { return sessionEntityTypes_; }
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Struct payload_;
    /// <summary>
    /// Optional. This field can be used to pass custom data into the webhook
    /// associated with the agent. Arbitrary JSON objects are supported.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Struct Payload {
      get { return payload_; }
      set {
        payload_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryParameters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryParameters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TimeZone != other.TimeZone) return false;
      if (!object.Equals(GeoLocation, other.GeoLocation)) return false;
      if(!contexts_.Equals(other.contexts_)) return false;
      if (ResetContexts != other.ResetContexts) return false;
      if(!sessionEntityTypes_.Equals(other.sessionEntityTypes_)) return false;
      if (!object.Equals(Payload, other.Payload)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TimeZone.Length != 0) hash ^= TimeZone.GetHashCode();
      if (geoLocation_ != null) hash ^= GeoLocation.GetHashCode();
      hash ^= contexts_.GetHashCode();
      if (ResetContexts != false) hash ^= ResetContexts.GetHashCode();
      hash ^= sessionEntityTypes_.GetHashCode();
      if (payload_ != null) hash ^= Payload.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TimeZone.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TimeZone);
      }
      if (geoLocation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(GeoLocation);
      }
      contexts_.WriteTo(output, _repeated_contexts_codec);
      if (ResetContexts != false) {
        output.WriteRawTag(32);
        output.WriteBool(ResetContexts);
      }
      sessionEntityTypes_.WriteTo(output, _repeated_sessionEntityTypes_codec);
      if (payload_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Payload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TimeZone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TimeZone);
      }
      if (geoLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GeoLocation);
      }
      size += contexts_.CalculateSize(_repeated_contexts_codec);
      if (ResetContexts != false) {
        size += 1 + 1;
      }
      size += sessionEntityTypes_.CalculateSize(_repeated_sessionEntityTypes_codec);
      if (payload_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Payload);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryParameters other) {
      if (other == null) {
        return;
      }
      if (other.TimeZone.Length != 0) {
        TimeZone = other.TimeZone;
      }
      if (other.geoLocation_ != null) {
        if (geoLocation_ == null) {
          geoLocation_ = new global::Google.Type.LatLng();
        }
        GeoLocation.MergeFrom(other.GeoLocation);
      }
      contexts_.Add(other.contexts_);
      if (other.ResetContexts != false) {
        ResetContexts = other.ResetContexts;
      }
      sessionEntityTypes_.Add(other.sessionEntityTypes_);
      if (other.payload_ != null) {
        if (payload_ == null) {
          payload_ = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        Payload.MergeFrom(other.Payload);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TimeZone = input.ReadString();
            break;
          }
          case 18: {
            if (geoLocation_ == null) {
              geoLocation_ = new global::Google.Type.LatLng();
            }
            input.ReadMessage(geoLocation_);
            break;
          }
          case 26: {
            contexts_.AddEntriesFrom(input, _repeated_contexts_codec);
            break;
          }
          case 32: {
            ResetContexts = input.ReadBool();
            break;
          }
          case 42: {
            sessionEntityTypes_.AddEntriesFrom(input, _repeated_sessionEntityTypes_codec);
            break;
          }
          case 50: {
            if (payload_ == null) {
              payload_ = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(payload_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Represents the query input. It can contain either:
  ///
  /// 1.  An audio config which
  ///     instructs the speech recognizer how to process the speech audio.
  ///
  /// 2.  A conversational query in the form of text,.
  ///
  /// 3.  An event that specifies which intent to trigger.
  /// </summary>
  public sealed partial class QueryInput : pb::IMessage<QueryInput> {
    private static readonly pb::MessageParser<QueryInput> _parser = new pb::MessageParser<QueryInput>(() => new QueryInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dialogflow.V2.SessionReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryInput(QueryInput other) : this() {
      switch (other.InputCase) {
        case InputOneofCase.AudioConfig:
          AudioConfig = other.AudioConfig.Clone();
          break;
        case InputOneofCase.Text:
          Text = other.Text.Clone();
          break;
        case InputOneofCase.Event:
          Event = other.Event.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryInput Clone() {
      return new QueryInput(this);
    }

    /// <summary>Field number for the "audio_config" field.</summary>
    public const int AudioConfigFieldNumber = 1;
    /// <summary>
    /// Instructs the speech recognizer how to process the speech audio.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dialogflow.V2.InputAudioConfig AudioConfig {
      get { return inputCase_ == InputOneofCase.AudioConfig ? (global::Google.Cloud.Dialogflow.V2.InputAudioConfig) input_ : null; }
      set {
        input_ = value;
        inputCase_ = value == null ? InputOneofCase.None : InputOneofCase.AudioConfig;
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 2;
    /// <summary>
    /// The natural language text to be processed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dialogflow.V2.TextInput Text {
      get { return inputCase_ == InputOneofCase.Text ? (global::Google.Cloud.Dialogflow.V2.TextInput) input_ : null; }
      set {
        input_ = value;
        inputCase_ = value == null ? InputOneofCase.None : InputOneofCase.Text;
      }
    }

    /// <summary>Field number for the "event" field.</summary>
    public const int EventFieldNumber = 3;
    /// <summary>
    /// The event to be processed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dialogflow.V2.EventInput Event {
      get { return inputCase_ == InputOneofCase.Event ? (global::Google.Cloud.Dialogflow.V2.EventInput) input_ : null; }
      set {
        input_ = value;
        inputCase_ = value == null ? InputOneofCase.None : InputOneofCase.Event;
      }
    }

    private object input_;
    /// <summary>Enum of possible cases for the "input" oneof.</summary>
    public enum InputOneofCase {
      None = 0,
      AudioConfig = 1,
      Text = 2,
      Event = 3,
    }
    private InputOneofCase inputCase_ = InputOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InputOneofCase InputCase {
      get { return inputCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInput() {
      inputCase_ = InputOneofCase.None;
      input_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AudioConfig, other.AudioConfig)) return false;
      if (!object.Equals(Text, other.Text)) return false;
      if (!object.Equals(Event, other.Event)) return false;
      if (InputCase != other.InputCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (inputCase_ == InputOneofCase.AudioConfig) hash ^= AudioConfig.GetHashCode();
      if (inputCase_ == InputOneofCase.Text) hash ^= Text.GetHashCode();
      if (inputCase_ == InputOneofCase.Event) hash ^= Event.GetHashCode();
      hash ^= (int) inputCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (inputCase_ == InputOneofCase.AudioConfig) {
        output.WriteRawTag(10);
        output.WriteMessage(AudioConfig);
      }
      if (inputCase_ == InputOneofCase.Text) {
        output.WriteRawTag(18);
        output.WriteMessage(Text);
      }
      if (inputCase_ == InputOneofCase.Event) {
        output.WriteRawTag(26);
        output.WriteMessage(Event);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (inputCase_ == InputOneofCase.AudioConfig) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AudioConfig);
      }
      if (inputCase_ == InputOneofCase.Text) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Text);
      }
      if (inputCase_ == InputOneofCase.Event) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Event);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryInput other) {
      if (other == null) {
        return;
      }
      switch (other.InputCase) {
        case InputOneofCase.AudioConfig:
          if (AudioConfig == null) {
            AudioConfig = new global::Google.Cloud.Dialogflow.V2.InputAudioConfig();
          }
          AudioConfig.MergeFrom(other.AudioConfig);
          break;
        case InputOneofCase.Text:
          if (Text == null) {
            Text = new global::Google.Cloud.Dialogflow.V2.TextInput();
          }
          Text.MergeFrom(other.Text);
          break;
        case InputOneofCase.Event:
          if (Event == null) {
            Event = new global::Google.Cloud.Dialogflow.V2.EventInput();
          }
          Event.MergeFrom(other.Event);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Google.Cloud.Dialogflow.V2.InputAudioConfig subBuilder = new global::Google.Cloud.Dialogflow.V2.InputAudioConfig();
            if (inputCase_ == InputOneofCase.AudioConfig) {
              subBuilder.MergeFrom(AudioConfig);
            }
            input.ReadMessage(subBuilder);
            AudioConfig = subBuilder;
            break;
          }
          case 18: {
            global::Google.Cloud.Dialogflow.V2.TextInput subBuilder = new global::Google.Cloud.Dialogflow.V2.TextInput();
            if (inputCase_ == InputOneofCase.Text) {
              subBuilder.MergeFrom(Text);
            }
            input.ReadMessage(subBuilder);
            Text = subBuilder;
            break;
          }
          case 26: {
            global::Google.Cloud.Dialogflow.V2.EventInput subBuilder = new global::Google.Cloud.Dialogflow.V2.EventInput();
            if (inputCase_ == InputOneofCase.Event) {
              subBuilder.MergeFrom(Event);
            }
            input.ReadMessage(subBuilder);
            Event = subBuilder;
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Represents the result of conversational query or event processing.
  /// </summary>
  public sealed partial class QueryResult : pb::IMessage<QueryResult> {
    private static readonly pb::MessageParser<QueryResult> _parser = new pb::MessageParser<QueryResult>(() => new QueryResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dialogflow.V2.SessionReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResult(QueryResult other) : this() {
      queryText_ = other.queryText_;
      languageCode_ = other.languageCode_;
      speechRecognitionConfidence_ = other.speechRecognitionConfidence_;
      action_ = other.action_;
      Parameters = other.parameters_ != null ? other.Parameters.Clone() : null;
      allRequiredParamsPresent_ = other.allRequiredParamsPresent_;
      fulfillmentText_ = other.fulfillmentText_;
      fulfillmentMessages_ = other.fulfillmentMessages_.Clone();
      webhookSource_ = other.webhookSource_;
      WebhookPayload = other.webhookPayload_ != null ? other.WebhookPayload.Clone() : null;
      outputContexts_ = other.outputContexts_.Clone();
      Intent = other.intent_ != null ? other.Intent.Clone() : null;
      intentDetectionConfidence_ = other.intentDetectionConfidence_;
      DiagnosticInfo = other.diagnosticInfo_ != null ? other.DiagnosticInfo.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResult Clone() {
      return new QueryResult(this);
    }

    /// <summary>Field number for the "query_text" field.</summary>
    public const int QueryTextFieldNumber = 1;
    private string queryText_ = "";
    /// <summary>
    /// The original conversational query text:
    /// - If natural language text was provided as input, `query_text` contains
    ///   a copy of the input.
    /// - If natural language speech audio was provided as input, `query_text`
    ///   contains the speech recognition result. If speech recognizer produced
    ///   multiple alternatives, a particular one is picked.
    /// - If an event was provided as input, `query_text` is not set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string QueryText {
      get { return queryText_; }
      set {
        queryText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "language_code" field.</summary>
    public const int LanguageCodeFieldNumber = 15;
    private string languageCode_ = "";
    /// <summary>
    /// The language that was triggered during intent detection.
    /// See [Language Support](https://dialogflow.com/docs/reference/language)
    /// for a list of the currently supported language codes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LanguageCode {
      get { return languageCode_; }
      set {
        languageCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "speech_recognition_confidence" field.</summary>
    public const int SpeechRecognitionConfidenceFieldNumber = 2;
    private float speechRecognitionConfidence_;
    /// <summary>
    /// The Speech recognition confidence between 0.0 and 1.0. A higher number
    /// indicates an estimated greater likelihood that the recognized words are
    /// correct. The default of 0.0 is a sentinel value indicating that confidence
    /// was not set.
    ///
    /// You should not rely on this field as it isn't guaranteed to be accurate, or
    /// even set. In particular this field isn't set in Webhook calls and for
    /// StreamingDetectIntent since the streaming endpoint has separate confidence
    /// estimates per portion of the audio in StreamingRecognitionResult.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float SpeechRecognitionConfidence {
      get { return speechRecognitionConfidence_; }
      set {
        speechRecognitionConfidence_ = value;
      }
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 3;
    private string action_ = "";
    /// <summary>
    /// The action name from the matched intent.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Action {
      get { return action_; }
      set {
        action_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parameters" field.</summary>
    public const int ParametersFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Struct parameters_;
    /// <summary>
    /// The collection of extracted parameters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Struct Parameters {
      get { return parameters_; }
      set {
        parameters_ = value;
      }
    }

    /// <summary>Field number for the "all_required_params_present" field.</summary>
    public const int AllRequiredParamsPresentFieldNumber = 5;
    private bool allRequiredParamsPresent_;
    /// <summary>
    /// This field is set to:
    /// - `false` if the matched intent has required parameters and not all of
    ///    the required parameter values have been collected.
    /// - `true` if all required parameter values have been collected, or if the
    ///    matched intent doesn't contain any required parameters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AllRequiredParamsPresent {
      get { return allRequiredParamsPresent_; }
      set {
        allRequiredParamsPresent_ = value;
      }
    }

    /// <summary>Field number for the "fulfillment_text" field.</summary>
    public const int FulfillmentTextFieldNumber = 6;
    private string fulfillmentText_ = "";
    /// <summary>
    /// The text to be pronounced to the user or shown on the screen.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FulfillmentText {
      get { return fulfillmentText_; }
      set {
        fulfillmentText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fulfillment_messages" field.</summary>
    public const int FulfillmentMessagesFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dialogflow.V2.Intent.Types.Message> _repeated_fulfillmentMessages_codec
        = pb::FieldCodec.ForMessage(58, global::Google.Cloud.Dialogflow.V2.Intent.Types.Message.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dialogflow.V2.Intent.Types.Message> fulfillmentMessages_ = new pbc::RepeatedField<global::Google.Cloud.Dialogflow.V2.Intent.Types.Message>();
    /// <summary>
    /// The collection of rich messages to present to the user.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dialogflow.V2.Intent.Types.Message> FulfillmentMessages {
      get { return fulfillmentMessages_; }
    }

    /// <summary>Field number for the "webhook_source" field.</summary>
    public const int WebhookSourceFieldNumber = 8;
    private string webhookSource_ = "";
    /// <summary>
    /// If the query was fulfilled by a webhook call, this field is set to the
    /// value of the `source` field returned in the webhook response.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WebhookSource {
      get { return webhookSource_; }
      set {
        webhookSource_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "webhook_payload" field.</summary>
    public const int WebhookPayloadFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Struct webhookPayload_;
    /// <summary>
    /// If the query was fulfilled by a webhook call, this field is set to the
    /// value of the `payload` field returned in the webhook response.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Struct WebhookPayload {
      get { return webhookPayload_; }
      set {
        webhookPayload_ = value;
      }
    }

    /// <summary>Field number for the "output_contexts" field.</summary>
    public const int OutputContextsFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dialogflow.V2.Context> _repeated_outputContexts_codec
        = pb::FieldCodec.ForMessage(82, global::Google.Cloud.Dialogflow.V2.Context.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dialogflow.V2.Context> outputContexts_ = new pbc::RepeatedField<global::Google.Cloud.Dialogflow.V2.Context>();
    /// <summary>
    /// The collection of output contexts. If applicable,
    /// `output_contexts.parameters` contains entries with name
    /// `&lt;parameter name>.original` containing the original parameter values
    /// before the query.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dialogflow.V2.Context> OutputContexts {
      get { return outputContexts_; }
    }

    /// <summary>Field number for the "intent" field.</summary>
    public const int IntentFieldNumber = 11;
    private global::Google.Cloud.Dialogflow.V2.Intent intent_;
    /// <summary>
    /// The intent that matched the conversational query. Some, not
    /// all fields are filled in this message, including but not limited to:
    /// `name`, `display_name` and `webhook_state`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dialogflow.V2.Intent Intent {
      get { return intent_; }
      set {
        intent_ = value;
      }
    }

    /// <summary>Field number for the "intent_detection_confidence" field.</summary>
    public const int IntentDetectionConfidenceFieldNumber = 12;
    private float intentDetectionConfidence_;
    /// <summary>
    /// The intent detection confidence. Values range from 0.0
    /// (completely uncertain) to 1.0 (completely certain).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float IntentDetectionConfidence {
      get { return intentDetectionConfidence_; }
      set {
        intentDetectionConfidence_ = value;
      }
    }

    /// <summary>Field number for the "diagnostic_info" field.</summary>
    public const int DiagnosticInfoFieldNumber = 14;
    private global::Google.Protobuf.WellKnownTypes.Struct diagnosticInfo_;
    /// <summary>
    /// The free-form diagnostic info. For example, this field
    /// could contain webhook call latency.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Struct DiagnosticInfo {
      get { return diagnosticInfo_; }
      set {
        diagnosticInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (QueryText != other.QueryText) return false;
      if (LanguageCode != other.LanguageCode) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SpeechRecognitionConfidence, other.SpeechRecognitionConfidence)) return false;
      if (Action != other.Action) return false;
      if (!object.Equals(Parameters, other.Parameters)) return false;
      if (AllRequiredParamsPresent != other.AllRequiredParamsPresent) return false;
      if (FulfillmentText != other.FulfillmentText) return false;
      if(!fulfillmentMessages_.Equals(other.fulfillmentMessages_)) return false;
      if (WebhookSource != other.WebhookSource) return false;
      if (!object.Equals(WebhookPayload, other.WebhookPayload)) return false;
      if(!outputContexts_.Equals(other.outputContexts_)) return false;
      if (!object.Equals(Intent, other.Intent)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(IntentDetectionConfidence, other.IntentDetectionConfidence)) return false;
      if (!object.Equals(DiagnosticInfo, other.DiagnosticInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (QueryText.Length != 0) hash ^= QueryText.GetHashCode();
      if (LanguageCode.Length != 0) hash ^= LanguageCode.GetHashCode();
      if (SpeechRecognitionConfidence != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SpeechRecognitionConfidence);
      if (Action.Length != 0) hash ^= Action.GetHashCode();
      if (parameters_ != null) hash ^= Parameters.GetHashCode();
      if (AllRequiredParamsPresent != false) hash ^= AllRequiredParamsPresent.GetHashCode();
      if (FulfillmentText.Length != 0) hash ^= FulfillmentText.GetHashCode();
      hash ^= fulfillmentMessages_.GetHashCode();
      if (WebhookSource.Length != 0) hash ^= WebhookSource.GetHashCode();
      if (webhookPayload_ != null) hash ^= WebhookPayload.GetHashCode();
      hash ^= outputContexts_.GetHashCode();
      if (intent_ != null) hash ^= Intent.GetHashCode();
      if (IntentDetectionConfidence != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(IntentDetectionConfidence);
      if (diagnosticInfo_ != null) hash ^= DiagnosticInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (QueryText.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(QueryText);
      }
      if (SpeechRecognitionConfidence != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(SpeechRecognitionConfidence);
      }
      if (Action.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Action);
      }
      if (parameters_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Parameters);
      }
      if (AllRequiredParamsPresent != false) {
        output.WriteRawTag(40);
        output.WriteBool(AllRequiredParamsPresent);
      }
      if (FulfillmentText.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(FulfillmentText);
      }
      fulfillmentMessages_.WriteTo(output, _repeated_fulfillmentMessages_codec);
      if (WebhookSource.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(WebhookSource);
      }
      if (webhookPayload_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(WebhookPayload);
      }
      outputContexts_.WriteTo(output, _repeated_outputContexts_codec);
      if (intent_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Intent);
      }
      if (IntentDetectionConfidence != 0F) {
        output.WriteRawTag(101);
        output.WriteFloat(IntentDetectionConfidence);
      }
      if (diagnosticInfo_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(DiagnosticInfo);
      }
      if (LanguageCode.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(LanguageCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (QueryText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(QueryText);
      }
      if (LanguageCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LanguageCode);
      }
      if (SpeechRecognitionConfidence != 0F) {
        size += 1 + 4;
      }
      if (Action.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Action);
      }
      if (parameters_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Parameters);
      }
      if (AllRequiredParamsPresent != false) {
        size += 1 + 1;
      }
      if (FulfillmentText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FulfillmentText);
      }
      size += fulfillmentMessages_.CalculateSize(_repeated_fulfillmentMessages_codec);
      if (WebhookSource.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WebhookSource);
      }
      if (webhookPayload_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WebhookPayload);
      }
      size += outputContexts_.CalculateSize(_repeated_outputContexts_codec);
      if (intent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Intent);
      }
      if (IntentDetectionConfidence != 0F) {
        size += 1 + 4;
      }
      if (diagnosticInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DiagnosticInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryResult other) {
      if (other == null) {
        return;
      }
      if (other.QueryText.Length != 0) {
        QueryText = other.QueryText;
      }
      if (other.LanguageCode.Length != 0) {
        LanguageCode = other.LanguageCode;
      }
      if (other.SpeechRecognitionConfidence != 0F) {
        SpeechRecognitionConfidence = other.SpeechRecognitionConfidence;
      }
      if (other.Action.Length != 0) {
        Action = other.Action;
      }
      if (other.parameters_ != null) {
        if (parameters_ == null) {
          parameters_ = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        Parameters.MergeFrom(other.Parameters);
      }
      if (other.AllRequiredParamsPresent != false) {
        AllRequiredParamsPresent = other.AllRequiredParamsPresent;
      }
      if (other.FulfillmentText.Length != 0) {
        FulfillmentText = other.FulfillmentText;
      }
      fulfillmentMessages_.Add(other.fulfillmentMessages_);
      if (other.WebhookSource.Length != 0) {
        WebhookSource = other.WebhookSource;
      }
      if (other.webhookPayload_ != null) {
        if (webhookPayload_ == null) {
          webhookPayload_ = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        WebhookPayload.MergeFrom(other.WebhookPayload);
      }
      outputContexts_.Add(other.outputContexts_);
      if (other.intent_ != null) {
        if (intent_ == null) {
          intent_ = new global::Google.Cloud.Dialogflow.V2.Intent();
        }
        Intent.MergeFrom(other.Intent);
      }
      if (other.IntentDetectionConfidence != 0F) {
        IntentDetectionConfidence = other.IntentDetectionConfidence;
      }
      if (other.diagnosticInfo_ != null) {
        if (diagnosticInfo_ == null) {
          diagnosticInfo_ = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        DiagnosticInfo.MergeFrom(other.DiagnosticInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            QueryText = input.ReadString();
            break;
          }
          case 21: {
            SpeechRecognitionConfidence = input.ReadFloat();
            break;
          }
          case 26: {
            Action = input.ReadString();
            break;
          }
          case 34: {
            if (parameters_ == null) {
              parameters_ = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(parameters_);
            break;
          }
          case 40: {
            AllRequiredParamsPresent = input.ReadBool();
            break;
          }
          case 50: {
            FulfillmentText = input.ReadString();
            break;
          }
          case 58: {
            fulfillmentMessages_.AddEntriesFrom(input, _repeated_fulfillmentMessages_codec);
            break;
          }
          case 66: {
            WebhookSource = input.ReadString();
            break;
          }
          case 74: {
            if (webhookPayload_ == null) {
              webhookPayload_ = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(webhookPayload_);
            break;
          }
          case 82: {
            outputContexts_.AddEntriesFrom(input, _repeated_outputContexts_codec);
            break;
          }
          case 90: {
            if (intent_ == null) {
              intent_ = new global::Google.Cloud.Dialogflow.V2.Intent();
            }
            input.ReadMessage(intent_);
            break;
          }
          case 101: {
            IntentDetectionConfidence = input.ReadFloat();
            break;
          }
          case 114: {
            if (diagnosticInfo_ == null) {
              diagnosticInfo_ = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(diagnosticInfo_);
            break;
          }
          case 122: {
            LanguageCode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The top-level message sent by the client to the
  /// `StreamingDetectIntent` method.
  ///
  /// Multiple request messages should be sent in order:
  ///
  /// 1.  The first message must contain `session`, `query_input` plus optionally
  ///     `query_params` and/or `single_utterance`. The message must not contain `input_audio`.
  ///
  /// 2.  If `query_input` was set to a streaming input audio config,
  ///     all subsequent messages must contain only `input_audio`.
  ///     Otherwise, finish the request stream.
  /// </summary>
  public sealed partial class StreamingDetectIntentRequest : pb::IMessage<StreamingDetectIntentRequest> {
    private static readonly pb::MessageParser<StreamingDetectIntentRequest> _parser = new pb::MessageParser<StreamingDetectIntentRequest>(() => new StreamingDetectIntentRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamingDetectIntentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dialogflow.V2.SessionReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamingDetectIntentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamingDetectIntentRequest(StreamingDetectIntentRequest other) : this() {
      session_ = other.session_;
      QueryParams = other.queryParams_ != null ? other.QueryParams.Clone() : null;
      QueryInput = other.queryInput_ != null ? other.QueryInput.Clone() : null;
      singleUtterance_ = other.singleUtterance_;
      inputAudio_ = other.inputAudio_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamingDetectIntentRequest Clone() {
      return new StreamingDetectIntentRequest(this);
    }

    /// <summary>Field number for the "session" field.</summary>
    public const int SessionFieldNumber = 1;
    private string session_ = "";
    /// <summary>
    /// Required. The name of the session the query is sent to.
    /// Format of the session name:
    /// `projects/&lt;Project ID>/agent/sessions/&lt;Session ID>`. It’s up to the API
    /// caller to choose an appropriate &lt;Session ID>. It can be a random number or
    /// some type of user identifier (preferably hashed). The length of the session
    /// ID must not exceed 36 characters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Session {
      get { return session_; }
      set {
        session_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "query_params" field.</summary>
    public const int QueryParamsFieldNumber = 2;
    private global::Google.Cloud.Dialogflow.V2.QueryParameters queryParams_;
    /// <summary>
    /// Optional. The parameters of this query.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dialogflow.V2.QueryParameters QueryParams {
      get { return queryParams_; }
      set {
        queryParams_ = value;
      }
    }

    /// <summary>Field number for the "query_input" field.</summary>
    public const int QueryInputFieldNumber = 3;
    private global::Google.Cloud.Dialogflow.V2.QueryInput queryInput_;
    /// <summary>
    /// Required. The input specification. It can be set to:
    ///
    /// 1.  an audio config which instructs the speech recognizer how to process
    ///     the speech audio,
    ///
    /// 2.  a conversational query in the form of text, or
    ///
    /// 3.  an event that specifies which intent to trigger.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dialogflow.V2.QueryInput QueryInput {
      get { return queryInput_; }
      set {
        queryInput_ = value;
      }
    }

    /// <summary>Field number for the "single_utterance" field.</summary>
    public const int SingleUtteranceFieldNumber = 4;
    private bool singleUtterance_;
    /// <summary>
    /// Optional. If `false` (default), recognition does not cease until the
    /// client closes the stream.
    /// If `true`, the recognizer will detect a single spoken utterance in input
    /// audio. Recognition ceases when it detects the audio's voice has
    /// stopped or paused. In this case, once a detected intent is received, the
    /// client should close the stream and start a new request with a new stream as
    /// needed.
    /// This setting is ignored when `query_input` is a piece of text or an event.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SingleUtterance {
      get { return singleUtterance_; }
      set {
        singleUtterance_ = value;
      }
    }

    /// <summary>Field number for the "input_audio" field.</summary>
    public const int InputAudioFieldNumber = 6;
    private pb::ByteString inputAudio_ = pb::ByteString.Empty;
    /// <summary>
    /// Optional. The input audio content to be recognized. Must be sent if
    /// `query_input` was set to a streaming input audio config. The complete audio
    /// over all streaming messages must not exceed 1 minute.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString InputAudio {
      get { return inputAudio_; }
      set {
        inputAudio_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamingDetectIntentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamingDetectIntentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Session != other.Session) return false;
      if (!object.Equals(QueryParams, other.QueryParams)) return false;
      if (!object.Equals(QueryInput, other.QueryInput)) return false;
      if (SingleUtterance != other.SingleUtterance) return false;
      if (InputAudio != other.InputAudio) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Session.Length != 0) hash ^= Session.GetHashCode();
      if (queryParams_ != null) hash ^= QueryParams.GetHashCode();
      if (queryInput_ != null) hash ^= QueryInput.GetHashCode();
      if (SingleUtterance != false) hash ^= SingleUtterance.GetHashCode();
      if (InputAudio.Length != 0) hash ^= InputAudio.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Session.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Session);
      }
      if (queryParams_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(QueryParams);
      }
      if (queryInput_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(QueryInput);
      }
      if (SingleUtterance != false) {
        output.WriteRawTag(32);
        output.WriteBool(SingleUtterance);
      }
      if (InputAudio.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(InputAudio);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Session.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Session);
      }
      if (queryParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(QueryParams);
      }
      if (queryInput_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(QueryInput);
      }
      if (SingleUtterance != false) {
        size += 1 + 1;
      }
      if (InputAudio.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(InputAudio);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamingDetectIntentRequest other) {
      if (other == null) {
        return;
      }
      if (other.Session.Length != 0) {
        Session = other.Session;
      }
      if (other.queryParams_ != null) {
        if (queryParams_ == null) {
          queryParams_ = new global::Google.Cloud.Dialogflow.V2.QueryParameters();
        }
        QueryParams.MergeFrom(other.QueryParams);
      }
      if (other.queryInput_ != null) {
        if (queryInput_ == null) {
          queryInput_ = new global::Google.Cloud.Dialogflow.V2.QueryInput();
        }
        QueryInput.MergeFrom(other.QueryInput);
      }
      if (other.SingleUtterance != false) {
        SingleUtterance = other.SingleUtterance;
      }
      if (other.InputAudio.Length != 0) {
        InputAudio = other.InputAudio;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Session = input.ReadString();
            break;
          }
          case 18: {
            if (queryParams_ == null) {
              queryParams_ = new global::Google.Cloud.Dialogflow.V2.QueryParameters();
            }
            input.ReadMessage(queryParams_);
            break;
          }
          case 26: {
            if (queryInput_ == null) {
              queryInput_ = new global::Google.Cloud.Dialogflow.V2.QueryInput();
            }
            input.ReadMessage(queryInput_);
            break;
          }
          case 32: {
            SingleUtterance = input.ReadBool();
            break;
          }
          case 50: {
            InputAudio = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The top-level message returned from the
  /// `StreamingDetectIntent` method.
  ///
  /// Multiple response messages can be returned in order:
  ///
  /// 1.  If the input was set to streaming audio, the first one or more messages
  ///     contain `recognition_result`. Each `recognition_result` represents a more
  ///     complete transcript of what the user said. The last `recognition_result`
  ///     has `is_final` set to `true`.
  ///
  /// 2.  The next message contains `response_id`, `query_result`
  ///     and optionally `webhook_status` if a WebHook was called.
  /// </summary>
  public sealed partial class StreamingDetectIntentResponse : pb::IMessage<StreamingDetectIntentResponse> {
    private static readonly pb::MessageParser<StreamingDetectIntentResponse> _parser = new pb::MessageParser<StreamingDetectIntentResponse>(() => new StreamingDetectIntentResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamingDetectIntentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dialogflow.V2.SessionReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamingDetectIntentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamingDetectIntentResponse(StreamingDetectIntentResponse other) : this() {
      responseId_ = other.responseId_;
      RecognitionResult = other.recognitionResult_ != null ? other.RecognitionResult.Clone() : null;
      QueryResult = other.queryResult_ != null ? other.QueryResult.Clone() : null;
      WebhookStatus = other.webhookStatus_ != null ? other.WebhookStatus.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamingDetectIntentResponse Clone() {
      return new StreamingDetectIntentResponse(this);
    }

    /// <summary>Field number for the "response_id" field.</summary>
    public const int ResponseIdFieldNumber = 1;
    private string responseId_ = "";
    /// <summary>
    /// The unique identifier of the response. It can be used to
    /// locate a response in the training example set or for reporting issues.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResponseId {
      get { return responseId_; }
      set {
        responseId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "recognition_result" field.</summary>
    public const int RecognitionResultFieldNumber = 2;
    private global::Google.Cloud.Dialogflow.V2.StreamingRecognitionResult recognitionResult_;
    /// <summary>
    /// The result of speech recognition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dialogflow.V2.StreamingRecognitionResult RecognitionResult {
      get { return recognitionResult_; }
      set {
        recognitionResult_ = value;
      }
    }

    /// <summary>Field number for the "query_result" field.</summary>
    public const int QueryResultFieldNumber = 3;
    private global::Google.Cloud.Dialogflow.V2.QueryResult queryResult_;
    /// <summary>
    /// The result of the conversational query or event processing.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dialogflow.V2.QueryResult QueryResult {
      get { return queryResult_; }
      set {
        queryResult_ = value;
      }
    }

    /// <summary>Field number for the "webhook_status" field.</summary>
    public const int WebhookStatusFieldNumber = 4;
    private global::Google.Rpc.Status webhookStatus_;
    /// <summary>
    /// Specifies the status of the webhook request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Rpc.Status WebhookStatus {
      get { return webhookStatus_; }
      set {
        webhookStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamingDetectIntentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamingDetectIntentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResponseId != other.ResponseId) return false;
      if (!object.Equals(RecognitionResult, other.RecognitionResult)) return false;
      if (!object.Equals(QueryResult, other.QueryResult)) return false;
      if (!object.Equals(WebhookStatus, other.WebhookStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResponseId.Length != 0) hash ^= ResponseId.GetHashCode();
      if (recognitionResult_ != null) hash ^= RecognitionResult.GetHashCode();
      if (queryResult_ != null) hash ^= QueryResult.GetHashCode();
      if (webhookStatus_ != null) hash ^= WebhookStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResponseId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResponseId);
      }
      if (recognitionResult_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RecognitionResult);
      }
      if (queryResult_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(QueryResult);
      }
      if (webhookStatus_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(WebhookStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResponseId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResponseId);
      }
      if (recognitionResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RecognitionResult);
      }
      if (queryResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(QueryResult);
      }
      if (webhookStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WebhookStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamingDetectIntentResponse other) {
      if (other == null) {
        return;
      }
      if (other.ResponseId.Length != 0) {
        ResponseId = other.ResponseId;
      }
      if (other.recognitionResult_ != null) {
        if (recognitionResult_ == null) {
          recognitionResult_ = new global::Google.Cloud.Dialogflow.V2.StreamingRecognitionResult();
        }
        RecognitionResult.MergeFrom(other.RecognitionResult);
      }
      if (other.queryResult_ != null) {
        if (queryResult_ == null) {
          queryResult_ = new global::Google.Cloud.Dialogflow.V2.QueryResult();
        }
        QueryResult.MergeFrom(other.QueryResult);
      }
      if (other.webhookStatus_ != null) {
        if (webhookStatus_ == null) {
          webhookStatus_ = new global::Google.Rpc.Status();
        }
        WebhookStatus.MergeFrom(other.WebhookStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ResponseId = input.ReadString();
            break;
          }
          case 18: {
            if (recognitionResult_ == null) {
              recognitionResult_ = new global::Google.Cloud.Dialogflow.V2.StreamingRecognitionResult();
            }
            input.ReadMessage(recognitionResult_);
            break;
          }
          case 26: {
            if (queryResult_ == null) {
              queryResult_ = new global::Google.Cloud.Dialogflow.V2.QueryResult();
            }
            input.ReadMessage(queryResult_);
            break;
          }
          case 34: {
            if (webhookStatus_ == null) {
              webhookStatus_ = new global::Google.Rpc.Status();
            }
            input.ReadMessage(webhookStatus_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Contains a speech recognition result corresponding to a portion of the audio
  /// that is currently being processed or an indication that this is the end
  /// of the single requested utterance.
  ///
  /// Example:
  ///
  /// 1.  transcript: "tube"
  ///
  /// 2.  transcript: "to be a"
  ///
  /// 3.  transcript: "to be"
  ///
  /// 4.  transcript: "to be or not to be"
  ///     is_final: true
  ///
  /// 5.  transcript: " that's"
  ///
  /// 6.  transcript: " that is"
  ///
  /// 7.  recognition_event_type: `RECOGNITION_EVENT_END_OF_SINGLE_UTTERANCE`
  ///
  /// 8.  transcript: " that is the question"
  ///     is_final: true
  ///
  /// Only two of the responses contain final results (#4 and #8 indicated by
  /// `is_final: true`). Concatenating these generates the full transcript: "to be
  /// or not to be that is the question".
  ///
  /// In each response we populate:
  ///
  /// *  for `MESSAGE_TYPE_TRANSCRIPT`: `transcript` and possibly `is_final`.
  ///
  /// *  for `MESSAGE_TYPE_END_OF_SINGLE_UTTERANCE`: only `event_type`.
  /// </summary>
  public sealed partial class StreamingRecognitionResult : pb::IMessage<StreamingRecognitionResult> {
    private static readonly pb::MessageParser<StreamingRecognitionResult> _parser = new pb::MessageParser<StreamingRecognitionResult>(() => new StreamingRecognitionResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamingRecognitionResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dialogflow.V2.SessionReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamingRecognitionResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamingRecognitionResult(StreamingRecognitionResult other) : this() {
      messageType_ = other.messageType_;
      transcript_ = other.transcript_;
      isFinal_ = other.isFinal_;
      confidence_ = other.confidence_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamingRecognitionResult Clone() {
      return new StreamingRecognitionResult(this);
    }

    /// <summary>Field number for the "message_type" field.</summary>
    public const int MessageTypeFieldNumber = 1;
    private global::Google.Cloud.Dialogflow.V2.StreamingRecognitionResult.Types.MessageType messageType_ = 0;
    /// <summary>
    /// Type of the result message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dialogflow.V2.StreamingRecognitionResult.Types.MessageType MessageType {
      get { return messageType_; }
      set {
        messageType_ = value;
      }
    }

    /// <summary>Field number for the "transcript" field.</summary>
    public const int TranscriptFieldNumber = 2;
    private string transcript_ = "";
    /// <summary>
    /// Transcript text representing the words that the user spoke.
    /// Populated if and only if `event_type` = `RECOGNITION_EVENT_TRANSCRIPT`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Transcript {
      get { return transcript_; }
      set {
        transcript_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_final" field.</summary>
    public const int IsFinalFieldNumber = 3;
    private bool isFinal_;
    /// <summary>
    /// The default of 0.0 is a sentinel value indicating `confidence` was not set.
    /// If `false`, the `StreamingRecognitionResult` represents an
    /// interim result that may change. If `true`, the recognizer will not return
    /// any further hypotheses about this piece of the audio. May only be populated
    /// for `event_type` = `RECOGNITION_EVENT_TRANSCRIPT`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFinal {
      get { return isFinal_; }
      set {
        isFinal_ = value;
      }
    }

    /// <summary>Field number for the "confidence" field.</summary>
    public const int ConfidenceFieldNumber = 4;
    private float confidence_;
    /// <summary>
    /// The Speech confidence between 0.0 and 1.0 for the current portion of audio.
    /// A higher number indicates an estimated greater likelihood that the
    /// recognized words are correct. The default of 0.0 is a sentinel value
    /// indicating that confidence was not set.
    ///
    /// This field is typically only provided if `is_final` is true and you should
    /// not rely on it being accurate or even set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Confidence {
      get { return confidence_; }
      set {
        confidence_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamingRecognitionResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamingRecognitionResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MessageType != other.MessageType) return false;
      if (Transcript != other.Transcript) return false;
      if (IsFinal != other.IsFinal) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Confidence, other.Confidence)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MessageType != 0) hash ^= MessageType.GetHashCode();
      if (Transcript.Length != 0) hash ^= Transcript.GetHashCode();
      if (IsFinal != false) hash ^= IsFinal.GetHashCode();
      if (Confidence != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Confidence);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MessageType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MessageType);
      }
      if (Transcript.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Transcript);
      }
      if (IsFinal != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsFinal);
      }
      if (Confidence != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Confidence);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MessageType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MessageType);
      }
      if (Transcript.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Transcript);
      }
      if (IsFinal != false) {
        size += 1 + 1;
      }
      if (Confidence != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamingRecognitionResult other) {
      if (other == null) {
        return;
      }
      if (other.MessageType != 0) {
        MessageType = other.MessageType;
      }
      if (other.Transcript.Length != 0) {
        Transcript = other.Transcript;
      }
      if (other.IsFinal != false) {
        IsFinal = other.IsFinal;
      }
      if (other.Confidence != 0F) {
        Confidence = other.Confidence;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            messageType_ = (global::Google.Cloud.Dialogflow.V2.StreamingRecognitionResult.Types.MessageType) input.ReadEnum();
            break;
          }
          case 18: {
            Transcript = input.ReadString();
            break;
          }
          case 24: {
            IsFinal = input.ReadBool();
            break;
          }
          case 37: {
            Confidence = input.ReadFloat();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the StreamingRecognitionResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Type of the response message.
      /// </summary>
      public enum MessageType {
        /// <summary>
        /// Not specified. Should never be used.
        /// </summary>
        [pbr::OriginalName("MESSAGE_TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Message contains a (possibly partial) transcript.
        /// </summary>
        [pbr::OriginalName("TRANSCRIPT")] Transcript = 1,
        /// <summary>
        /// Event indicates that the server has detected the end of the user's speech
        /// utterance and expects no additional speech. Therefore, the server will
        /// not process additional audio (although it may subsequently return
        /// additional results). The client should stop sending additional audio
        /// data, half-close the gRPC connection, and wait for any additional results
        /// until the server closes the gRPC connection. This message is only sent if
        /// `single_utterance` was set to `true`, and is not used otherwise.
        /// </summary>
        [pbr::OriginalName("END_OF_SINGLE_UTTERANCE")] EndOfSingleUtterance = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// Instructs the speech recognizer how to process the audio content.
  /// </summary>
  public sealed partial class InputAudioConfig : pb::IMessage<InputAudioConfig> {
    private static readonly pb::MessageParser<InputAudioConfig> _parser = new pb::MessageParser<InputAudioConfig>(() => new InputAudioConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InputAudioConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dialogflow.V2.SessionReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InputAudioConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InputAudioConfig(InputAudioConfig other) : this() {
      audioEncoding_ = other.audioEncoding_;
      sampleRateHertz_ = other.sampleRateHertz_;
      languageCode_ = other.languageCode_;
      phraseHints_ = other.phraseHints_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InputAudioConfig Clone() {
      return new InputAudioConfig(this);
    }

    /// <summary>Field number for the "audio_encoding" field.</summary>
    public const int AudioEncodingFieldNumber = 1;
    private global::Google.Cloud.Dialogflow.V2.AudioEncoding audioEncoding_ = 0;
    /// <summary>
    /// Required. Audio encoding of the audio content to process.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dialogflow.V2.AudioEncoding AudioEncoding {
      get { return audioEncoding_; }
      set {
        audioEncoding_ = value;
      }
    }

    /// <summary>Field number for the "sample_rate_hertz" field.</summary>
    public const int SampleRateHertzFieldNumber = 2;
    private int sampleRateHertz_;
    /// <summary>
    /// Required. Sample rate (in Hertz) of the audio content sent in the query.
    /// Refer to [Cloud Speech API documentation](/speech/docs/basics) for more
    /// details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SampleRateHertz {
      get { return sampleRateHertz_; }
      set {
        sampleRateHertz_ = value;
      }
    }

    /// <summary>Field number for the "language_code" field.</summary>
    public const int LanguageCodeFieldNumber = 3;
    private string languageCode_ = "";
    /// <summary>
    /// Required. The language of the supplied audio. Dialogflow does not do
    /// translations. See [Language
    /// Support](https://dialogflow.com/docs/languages) for a list of the
    /// currently supported language codes. Note that queries in the same session
    /// do not necessarily need to specify the same language.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LanguageCode {
      get { return languageCode_; }
      set {
        languageCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "phrase_hints" field.</summary>
    public const int PhraseHintsFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_phraseHints_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> phraseHints_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Optional. The collection of phrase hints which are used to boost accuracy
    /// of speech recognition.
    /// Refer to [Cloud Speech API documentation](/speech/docs/basics#phrase-hints)
    /// for more details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> PhraseHints {
      get { return phraseHints_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InputAudioConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InputAudioConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AudioEncoding != other.AudioEncoding) return false;
      if (SampleRateHertz != other.SampleRateHertz) return false;
      if (LanguageCode != other.LanguageCode) return false;
      if(!phraseHints_.Equals(other.phraseHints_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AudioEncoding != 0) hash ^= AudioEncoding.GetHashCode();
      if (SampleRateHertz != 0) hash ^= SampleRateHertz.GetHashCode();
      if (LanguageCode.Length != 0) hash ^= LanguageCode.GetHashCode();
      hash ^= phraseHints_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AudioEncoding != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AudioEncoding);
      }
      if (SampleRateHertz != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SampleRateHertz);
      }
      if (LanguageCode.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LanguageCode);
      }
      phraseHints_.WriteTo(output, _repeated_phraseHints_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AudioEncoding != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AudioEncoding);
      }
      if (SampleRateHertz != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SampleRateHertz);
      }
      if (LanguageCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LanguageCode);
      }
      size += phraseHints_.CalculateSize(_repeated_phraseHints_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InputAudioConfig other) {
      if (other == null) {
        return;
      }
      if (other.AudioEncoding != 0) {
        AudioEncoding = other.AudioEncoding;
      }
      if (other.SampleRateHertz != 0) {
        SampleRateHertz = other.SampleRateHertz;
      }
      if (other.LanguageCode.Length != 0) {
        LanguageCode = other.LanguageCode;
      }
      phraseHints_.Add(other.phraseHints_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            audioEncoding_ = (global::Google.Cloud.Dialogflow.V2.AudioEncoding) input.ReadEnum();
            break;
          }
          case 16: {
            SampleRateHertz = input.ReadInt32();
            break;
          }
          case 26: {
            LanguageCode = input.ReadString();
            break;
          }
          case 34: {
            phraseHints_.AddEntriesFrom(input, _repeated_phraseHints_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Represents the natural language text to be processed.
  /// </summary>
  public sealed partial class TextInput : pb::IMessage<TextInput> {
    private static readonly pb::MessageParser<TextInput> _parser = new pb::MessageParser<TextInput>(() => new TextInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TextInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dialogflow.V2.SessionReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TextInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TextInput(TextInput other) : this() {
      text_ = other.text_;
      languageCode_ = other.languageCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TextInput Clone() {
      return new TextInput(this);
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 1;
    private string text_ = "";
    /// <summary>
    /// Required. The UTF-8 encoded natural language text to be processed.
    /// Text length must not exceed 256 bytes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "language_code" field.</summary>
    public const int LanguageCodeFieldNumber = 2;
    private string languageCode_ = "";
    /// <summary>
    /// Required. The language of this conversational query. See [Language
    /// Support](https://dialogflow.com/docs/languages) for a list of the
    /// currently supported language codes. Note that queries in the same session
    /// do not necessarily need to specify the same language.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LanguageCode {
      get { return languageCode_; }
      set {
        languageCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TextInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TextInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Text != other.Text) return false;
      if (LanguageCode != other.LanguageCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (LanguageCode.Length != 0) hash ^= LanguageCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Text.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Text);
      }
      if (LanguageCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LanguageCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (LanguageCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LanguageCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TextInput other) {
      if (other == null) {
        return;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      if (other.LanguageCode.Length != 0) {
        LanguageCode = other.LanguageCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Text = input.ReadString();
            break;
          }
          case 18: {
            LanguageCode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Events allow for matching intents by event name instead of the natural
  /// language input. For instance, input `&lt;event: { name: “welcome_event”,
  /// parameters: { name: “Sam” } }>` can trigger a personalized welcome response.
  /// The parameter `name` may be used by the agent in the response:
  /// `“Hello #welcome_event.name! What can I do for you today?”`.
  /// </summary>
  public sealed partial class EventInput : pb::IMessage<EventInput> {
    private static readonly pb::MessageParser<EventInput> _parser = new pb::MessageParser<EventInput>(() => new EventInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dialogflow.V2.SessionReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventInput(EventInput other) : this() {
      name_ = other.name_;
      Parameters = other.parameters_ != null ? other.Parameters.Clone() : null;
      languageCode_ = other.languageCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventInput Clone() {
      return new EventInput(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The unique identifier of the event.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parameters" field.</summary>
    public const int ParametersFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Struct parameters_;
    /// <summary>
    /// Optional. The collection of parameters associated with the event.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Struct Parameters {
      get { return parameters_; }
      set {
        parameters_ = value;
      }
    }

    /// <summary>Field number for the "language_code" field.</summary>
    public const int LanguageCodeFieldNumber = 3;
    private string languageCode_ = "";
    /// <summary>
    /// Required. The language of this query. See [Language
    /// Support](https://dialogflow.com/docs/languages) for a list of the
    /// currently supported language codes. Note that queries in the same session
    /// do not necessarily need to specify the same language.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LanguageCode {
      get { return languageCode_; }
      set {
        languageCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(Parameters, other.Parameters)) return false;
      if (LanguageCode != other.LanguageCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (parameters_ != null) hash ^= Parameters.GetHashCode();
      if (LanguageCode.Length != 0) hash ^= LanguageCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (parameters_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Parameters);
      }
      if (LanguageCode.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LanguageCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (parameters_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Parameters);
      }
      if (LanguageCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LanguageCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventInput other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.parameters_ != null) {
        if (parameters_ == null) {
          parameters_ = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        Parameters.MergeFrom(other.Parameters);
      }
      if (other.LanguageCode.Length != 0) {
        LanguageCode = other.LanguageCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (parameters_ == null) {
              parameters_ = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(parameters_);
            break;
          }
          case 26: {
            LanguageCode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
